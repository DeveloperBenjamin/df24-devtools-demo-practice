#!/bin/bash
#
# This script helps set up the CodeBuilder environment used
# by the DF24 Developer Tools demo by doing the following:
# 1. Update the Salesforce CLI.
# 2. Install code Analyzer 5 (beta)
# 3. Install the Typescript NPM package globally.
# 4. Remove the `df24-devtools-demo` folder (if it exists).
# 5. Set the global Git config values for `user.name` and `user.email`
#    This is a requirement for the Git extension for VS Code to work.
# 6. Clone the `df24-devtools-demo` repository from GitHub.
#
# Exit on any error
set -e

# Ensure the script is being run from the /home/codebuilder directory.
if [ "$(pwd)" != "/home/codebuilder" ]; then
    echo -e  "\u274C"" Error: Current directory is not /home/codebuilder"
    exit 1
fi

# Handle script errors.
function handle_error {
  echo
  echo -e  "\u274C"" DF24 DevTools Demo: Code Builder Environment Setup Failed"
  echo
}

# Handle script success.
function handle_success {
  echo
  echo "───────────────────────────────────────────────────────────────────────"
  echo
  echo -e "\u2705"" DF24 DevTools Demo: Code Builder Environment Setup Complete"
  echo
  echo "───────────────────────────────────────────────────────────────────────"
  echo
}

# Send trapped errors to the error handler.
trap handle_error ERR

# Announce that the Training Lab Environment Setup process has started.
echo
echo "───────────────────────────────────────────────────────────────────────"
echo
echo -e "\U1F680"" Starting Training Lab Environment Setup"

# Update Salesforce CLI.
echo
echo "───────────────────────────────────────────────────────────────────────"
echo "(1) Updating Salesforce CLI (if needed)"
echo "───────────────────────────────────────────────────────────────────────"
sf update


# Install Code Analyzer 5 (beta).
echo
echo "───────────────────────────────────────────────────────────────────────"
echo "(2) Installing Code Analyzer 5 (beta)"
echo "───────────────────────────────────────────────────────────────────────"
sf plugins install @salesforce/plugin-code-analyzer@latest-alpha

# Install Typescript.
echo
echo "───────────────────────────────────────────────────────────────────────"
echo "(3) Installing Typescript"
echo "───────────────────────────────────────────────────────────────────────"
npm install -g typescript

# Remove the df24-devtools-demo folder (if it exists).
echo
echo "───────────────────────────────────────────────────────────────────────"
echo "(4) Removing the df24-devtools-demo folder"
echo "───────────────────────────────────────────────────────────────────────"
rm -rf home/codebuilder/df24-devtools-demo

# Clone the df24-devtools-demo repository from GitHub.
echo
echo "───────────────────────────────────────────────────────────────────────"
echo "(5) Cloning the df24-devtools-demo repository"
echo "───────────────────────────────────────────────────────────────────────"
git clone https://github.com/VivekMChawla/df24-devtools-demo.git


# Disable the ERR trap and allow script errors
# This is requied because bash interprets an attempt
# to read an unset git config variable as an error.
trap - ERR
set +e

# Save existing global Git config in variables.
github_user_name=$(git config --get --global user.name)
github_user_email=$(git config --get --global user.email)

# Enable the ERR trap and disallow script errors.
set -e
trap handle_error ERR

# Set generic Git config values for name and email, but
# ONLY if these global config values were NOT already set.
# This is required to before using Git features in VS Code.
echo
echo "───────────────────────────────────────────────────────────────────────"
echo "(?) Setting global Git name/email config"
echo "───────────────────────────────────────────────────────────────────────"
echo
if [ -n "$github_user_name" ]; then
  echo "--> Git Name: $github_user_name (already set)"
else
  git config --global user.name "Developer Benjamin"
  echo "--> Git Name: $(git config --get --global user.name)"
fi
if [ -n "$github_user_email" ]; then
  echo "--> Git Name: $github_user_email (already set)"
else
  git config --global user.email "benjamin@apprana.com"
  echo "--> Git Email: $(git config --get --global user.email)"
fi

handle_success
